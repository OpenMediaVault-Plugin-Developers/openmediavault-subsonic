#!/bin/bash
#
set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

#wget http://subsonic.org/download/subsonic-6.0-standalone.tar.gz
#tar xf subsonic-6.0-standalone.tar.gz -C /var/subsonic

export PATH=$PATH
OMV_SUB_CONFIG="/etc/default/subsonic"
OMV_SUB_USER=subsonic
OMV_SUB_PLUGIN_XPATH=/config/services/subsonic

getsettings() {
ver1=`wget -q http://www.subsonic.org/pages/download.jsp -O - | \grep subsonic-.*.deb | grep -v "beta" | \sed 's/.*href=\"\(.*\)\".*/\1/' | sed 's/^[^-]*=//' | sed 's/\(^subsonic\-\)\(.*\)\(\.deb\)/\2/'`
ver2=`grep -A 6 'Package: subsonic' /var/lib/dpkg/status | grep ^Version: | sed 's/^[^-]*: //'`
ver3=`wget -q http://www.subsonic.org/pages/download.jsp -O - | \grep subsonic-.*.deb | grep "beta" | \sed 's/.*href=\"\(.*\)\".*/\1/' | sed 's/^[^-]*=//' | sed 's/\(^subsonic\-\)\(.*\)\(\.deb\)/\2/'`
ver4="${ver3/beta/}"
ver5="${ver2/beta/}"
msg="Current version is $ver2,"

if [ "$ver2" = "" ]; then
    msg="No version is installed yet, click the update button for the version you require"
    xmlstarlet ed -L -u "${OMV_SUB_PLUGIN_XPATH}/update" -v "1" ${OMV_CONFIG_FILE}
    sleep 1
    if [[ $ver4 > $ver1 ]]; then
        xmlstarlet ed -L -u "${OMV_SUB_PLUGIN_XPATH}/bupdate" -v "1" ${OMV_CONFIG_FILE}
    else
        xmlstarlet ed -L -u "${OMV_SUB_PLUGIN_XPATH}/bupdate" -v "0" ${OMV_CONFIG_FILE}
    fi
else
    if [ "$ver1" != "$ver2" ]; then
        if [[ $ver1 < $ver5 ]]; then
            xmlstarlet ed -L -u "${OMV_SUB_PLUGIN_XPATH}/update" -v "1" ${OMV_CONFIG_FILE}
            msg+=" $ver1 is available."
        else
            xmlstarlet ed -L -u "${OMV_SUB_PLUGIN_XPATH}/update" -v "0" ${OMV_CONFIG_FILE}
            msg+=" there is no new update available."
        fi
    else
        xmlstarlet ed -L -u "${OMV_SUB_PLUGIN_XPATH}/update" -v "0" ${OMV_CONFIG_FILE}
        msg+=" there is no new update available."
    fi

    xmlstarlet ed -L -u "${OMV_SUB_PLUGIN_XPATH}/bupdate" -v "0" ${OMV_CONFIG_FILE}
    sleep 1

    if [[ $ver4 > $ver1 ]]; then
        if [ "$ver3" = "$ver2" ]; then
            xmlstarlet ed -L -u "${OMV_SUB_PLUGIN_XPATH}/bupdate" -v "0" ${OMV_CONFIG_FILE}
        else
            xmlstarlet ed -L -u "${OMV_SUB_PLUGIN_XPATH}/bupdate" -v "1" ${OMV_CONFIG_FILE}
            msg+=" $ver3 is available."
        fi
    fi
fi

xmlstarlet ed -L -u "${OMV_SUB_PLUGIN_XPATH}/msg" -v "$msg" ${OMV_CONFIG_FILE}

if [ "$(omv_config_get "${OMV_SUB_PLUGIN_XPATH}/enable")" != "1" ]; then
    exit 0
fi

if [ "$(omv_config_get "${OMV_SUB_PLUGIN_XPATH}/ssl")" != "1" ]; then
    encryption="port"
else
    encryption="port=0 --https-port"
fi

if [ "$(omv_config_get "${OMV_SUB_PLUGIN_XPATH}/ppass")" != "1" ]; then
    pass=""
else
    pass="--context-path=/subsonic "
fi

#SSL=$(omv_config_get "${OMV_SUB_PLUGIN_XPATH}/ssl")
port=$(omv_config_get "${OMV_SUB_PLUGIN_XPATH}/port")

# Create subsonic config file
cat <<EOF > ${OMV_SUB_CONFIG}
# Configuration for openmediavault-subsonic

SUBSONIC_ARGS="${pass}--${encryption}=${port} --max-memory=150"
SUBSONIC_USER=${OMV_SUB_USER}
EOF

chmod 644 ${OMV_SUB_CONFIG}

if [ "$(omv_config_get "//services/subsonic/ppass")" != "1" ]; then
    if [ -f "/etc/nginx/openmediavault-webgui.d/sub.conf" ]; then
        rm /etc/nginx/openmediavault-webgui.d/sub.conf > /dev/null 2>&1
        nginx -s reload > /dev/null 2>&1
    fi
else
    IP=$(ifconfig|sed -n "/inet addr:.*255.255.255.*/{s/.*inet addr://; s/ .*//; p}")
    cat <<EOF > /etc/nginx/openmediavault-webgui.d/sub.conf
location /subsonic {
        proxy_pass        http://localhost:$(omv_config_get "//services/subsonic/port")/subsonic;
        #proxy_set_header  Host localhost:$(omv_config_get "//services/subsonic/port");
        proxy_set_header  Host $IP;
        proxy_redirect    default;
}

EOF
    nginx -s reload
fi

}

update() {
ver1=`wget -q http://www.subsonic.org/pages/download.jsp -O - | \grep subsonic-.*.deb | grep -v "beta" | \sed 's/.*href=\"\(.*\)\".*/\1/' | sed 's/^[^-]*=//' | sed 's/\(^subsonic\-\)\(.*\)\(\.deb\)/\2/'`
if [ "$ver1" = "" ]; then
    exit
fi
wget http://sourceforge.net/projects/subsonic/files/subsonic/${ver1}/subsonic-${ver1}.deb -O /tmp/subsonic-${ver1}.deb
dpkg --force-confold -i /tmp/subsonic-${ver1}.deb
rm -Rf /tmp/subsonic-${ver1}.deb
if [ "$(omv_config_get "//services/subsonic/enable")" = "1" ]; then
    /etc/init.d/subsonic restart > /dev/null 2>&1
else
    /etc/init.d/subsonic stop > /dev/null 2>&1
fi
}

bupdate() {
ver1=`wget -q http://www.subsonic.org/pages/download.jsp -O - | \grep subsonic-.*.deb | grep "beta" | \sed 's/.*href=\"\(.*\)\".*/\1/' | sed 's/^[^-]*=//' | sed 's/\(^subsonic\-\)\(.*\)\(\.deb\)/\2/'`
if [ "$ver1" = "" ]; then
    exit
fi
wget http://sourceforge.net/projects/subsonic/files/subsonic/${ver1}/subsonic-${ver1}.deb -O /tmp/subsonic-${ver1}.deb
dpkg --force-confold -i /tmp/subsonic-${ver1}.deb
rm -Rf /tmp/subsonic-${ver1}.deb
if [ "$(omv_config_get "//services/subsonic/enable")" = "1" ]; then
    /etc/init.d/subsonic restart > /dev/null 2>&1
else
    /etc/init.d/subsonic stop > /dev/null 2>&1
fi
}

case "$2" in
  doUpdateSuB)
    update
    ;;
  doUpdateSuBB)
    bupdate
    ;;
  getsettings)
    getsettings
    ;;
  *)
    exit
esac


