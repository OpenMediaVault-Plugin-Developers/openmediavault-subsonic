#!/bin/bash
#
set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMV_SUB_CONFIG="/etc/default/subsonic"
OMV_SUB_USER=subsonic
OMV_SUB_PLUGIN_XPATH=//services/subsonic

update() {
service subsonic stop
ver1=`wget -q http://www.subsonic.org/pages/download.jsp -O - | \grep subsonic-[0-9].[0-9].deb | \sed 's/.*href=\"\(.*\)\".*/\1/' | sed 's/^[^-]*=//' | sed 's/\(^subsonic\-\)\(.*\)\(\.deb\)/\2/'`
if [ "$ver1" == "" ]; then
    exit
fi
wget http://sourceforge.net/projects/subsonic/files/subsonic/${ver1}/subsonic-${ver1}.deb -O /tmp/subsonic-${ver1}.deb
dpkg -i /tmp/subsonic-${ver1}.deb
rm -Rf /tmp/subsonic-${ver1}.deb
}

bupdate() {
service subsonic stop
ver1=`wget -q http://www.subsonic.org/pages/download.jsp -O - | \grep subsonic-[0-9].[0-9].beta[0-9].deb | \sed 's/.*href=\"\(.*\)\".*/\1/' | sed 's/^[^-]*=//' | sed 's/\(^subsonic\-\)\(.*\)\(\.deb\)/\2/'`
if [ "$ver1" == "" ]; then
    exit
fi
wget http://sourceforge.net/projects/subsonic/files/subsonic/${ver1}/subsonic-${ver1}.deb -O /tmp/subsonic-${ver1}.deb
dpkg -i /tmp/subsonic-${ver1}.deb
rm -Rf /tmp/subsonic-${ver1}.deb
}

getsettings() {
ver1=`wget -q http://www.subsonic.org/pages/download.jsp -O - | \grep subsonic-[0-9].[0-9].deb | \sed 's/.*href=\"\(.*\)\".*/\1/' | sed 's/^[^-]*=//' | sed 's/\(^subsonic\-\)\(.*\)\(\.deb\)/\2/'`
ver2=`grep -A 6 'Package: subsonic' /var/lib/dpkg/status  | grep ^Version: | sed 's/^[^-]*: //'`
ver3=`wget -q http://www.subsonic.org/pages/download.jsp -O - | \grep subsonic-[0-9].[0-9].beta[0-9].deb | \sed 's/.*href=\"\(.*\)\".*/\1/' | sed 's/^[^-]*=//' | sed 's/\(^subsonic\-\)\(.*\)\(\.deb\)/\2/'`
ver4="${ver3/beta/}"
ver5="${ver2/beta/}"
msg="Current version is $ver2,"
#ver2=0.7.00 #use to test if button shows if values do not match
if [ "$ver1" != "$ver5" ]; then
    if [ "$ver1" > "$ver5" ]; then
        xmlstarlet ed -L -u "//services/subsonic/update" -v 1 -n ${OMV_CONFIG_FILE}
        msg+=" $ver1 is available."
    else
        xmlstarlet ed -L -u "//services/subsonic/update" -v 0 -n ${OMV_CONFIG_FILE}
        msg+=" there is no new update available."
    fi
else
    xmlstarlet ed -L -u "//services/subsonic/update" -v 0 -n ${OMV_CONFIG_FILE}
    msg+=" there is no new update available."
fi


if [ "$ver4" > "$ver1" ]; then
    if [ "$ver3" == "$ver2" ]; then
        xmlstarlet ed -L -u "//services/subsonic/bupdate" -v 0 -n ${OMV_CONFIG_FILE}
    else
        xmlstarlet ed -L -u "//services/subsonic/bupdate" -v 1 -n ${OMV_CONFIG_FILE}
        msg+=" $ver3 is available."
    fi
fi

xmlstarlet ed -L -u "//services/subsonic/msg" -v "$msg" -n ${OMV_CONFIG_FILE}

if [ "$(omv_config_get "//services/subsonic/enable")" != "1" ]; then
    exit 0
fi


port=$(omv_config_get "${OMV_SUB_PLUGIN_XPATH}/port")

# Create subsonic config file
cat <<EOF > ${OMV_SUB_CONFIG}
# Configuration for openmediavault-subsonic

SUBSONIC_ARGS="--port=${port} --max-memory=150"
SUBSONIC_USER=${OMV_SUB_USER}
EOF


chmod 644 ${SUB_CONFIG}



}

case "$2" in
  update)
    update
    ;;
  bupdate)
    bupdate
    ;;
  getsettings)
    getsettings
    ;;
  *)
    exit 1
esac
